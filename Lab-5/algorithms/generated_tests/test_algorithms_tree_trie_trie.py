# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import algorithms.tree.trie.trie as module_0


def test_case_0():
    trie_node_0 = module_0.TrieNode()


def test_case_1():
    trie_0 = module_0.Trie()


def test_case_2():
    trie_0 = module_0.Trie()
    list_0 = [trie_0]
    var_0 = trie_0.starts_with(list_0)
    assert var_0 is False


def test_case_3():
    trie_0 = module_0.Trie()
    dict_0 = {}
    trie_1 = module_0.Trie()
    trie_node_0 = module_0.TrieNode()
    trie_node_1 = trie_0.starts_with(dict_0)


def test_case_4():
    trie_0 = module_0.Trie()
    list_0 = [trie_0]
    var_0 = trie_0.insert(list_0)
    trie_1 = module_0.Trie()
    trie_node_0 = module_0.TrieNode()


def test_case_5():
    trie_0 = module_0.Trie()
    str_0 = "\n    For a given node:\n        - WHITE: has not been visited yet\n        - GRAY: is currently being investigated for a cycle\n        - BLACK: is not part of a cycle\n    "
    var_0 = trie_0.search(str_0)
    assert var_0 is False


@pytest.mark.xfail(strict=True)
def test_case_6():
    trie_0 = module_0.Trie()
    trie_1 = module_0.Trie()
    list_0 = [trie_0, trie_0]
    trie_node_0 = trie_0.insert(list_0)
    var_0 = trie_0.starts_with(list_0)
    assert var_0 is True
    trie_node_1 = module_0.TrieNode()
    var_0.rpartition(trie_node_1)


def test_case_7():
    trie_0 = module_0.Trie()
    str_0 = "\n    For a given node:\n        - WHITE: has not been visited yet\n        - GRAY: is currently being investigated for a cycle\n        - BLACK: is not part of a cycle\n    "
    var_0 = trie_0.insert(str_0)
    var_1 = trie_0.search(str_0)
    assert var_1 is True
