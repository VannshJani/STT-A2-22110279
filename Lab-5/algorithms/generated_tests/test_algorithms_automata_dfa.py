# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import algorithms.automata.dfa as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    none_type_0 = None
    list_0 = [none_type_0]
    module_0.DFA(none_type_0, none_type_0, list_0, list_0)


def test_case_1():
    none_type_0 = None
    list_0 = []
    var_0 = module_0.DFA(none_type_0, none_type_0, list_0, list_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = 3197
    module_0.DFA(int_0, int_0, int_0, int_0)


def test_case_3():
    str_0 = ""
    var_0 = module_0.DFA(str_0, str_0, str_0, str_0)
    tuple_0 = (var_0, var_0, var_0, var_0)
    tuple_1 = (tuple_0,)
    var_1 = module_0.DFA(tuple_1, var_0, tuple_1, tuple_0)
    assert var_1 is False


def test_case_4():
    str_0 = ""
    var_0 = module_0.DFA(str_0, str_0, str_0, str_0)
    tuple_0 = (var_0, var_0, var_0, var_0)
    tuple_1 = (tuple_0,)
    var_1 = module_0.DFA(tuple_1, var_0, tuple_0, tuple_0)
    assert var_1 is True
