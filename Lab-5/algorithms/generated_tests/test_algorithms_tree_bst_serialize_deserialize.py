# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import algorithms.tree.bst.serialize_deserialize as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    complex_0 = 1804 + 2174.795j
    module_0.serialize(complex_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    tuple_0 = ()
    var_0 = module_0.serialize(tuple_0)
    assert var_0 == "#"
    bytes_0 = b"\xda\xdc\xe5\xfd\xb5\x94"
    tree_node_0 = module_0.TreeNode(bytes_0)
    int_0 = 1665
    module_0.serialize(int_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    none_type_0 = None
    var_0 = module_0.serialize(none_type_0)
    assert var_0 == "#"
    var_1 = module_0.deserialize(var_0)
    var_2 = module_0.serialize(bool_0)
    module_0.deserialize(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = ']O"c_'
    module_0.deserialize(str_0)


def test_case_4():
    str_0 = "t\r.s}G"
    dict_0 = {str_0: str_0, str_0: str_0}
    list_0 = [dict_0, dict_0, dict_0, str_0]
    tree_node_0 = module_0.TreeNode(list_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    list_0 = []
    bytes_0 = b">l\xa5"
    tuple_0 = (list_0, bytes_0)
    module_0.deserialize(tuple_0)
