# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import algorithms.strings.strip_url_params as module_0
import urllib.parse as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = True
    module_0.strip_url_params1(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = False
    module_0.strip_url_params1(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    set_0 = set()
    var_0 = module_0.strip_url_params2(set_0)
    module_0.strip_url_params1(set_0, set_0)


def test_case_3():
    str_0 = "\nWrite a functon that does the following:\nRemoves any duplicate query string parameters from the url\nRemoves any query string parameters specified within the 2nd argument (optioal array)\n\nAn exaple:\nwww.saadbenn.com?a=1&b=2&a=2') // returns 'www.sadbenn.com?a=1&b=2'\n"
    var_0 = module_0.strip_url_params1(str_0)
    assert (
        var_0
        == "\nWrite a functon that does the following:\nRemoves any duplicate query string parameters from the url\nRemoves any query string parameters specified within the 2nd argument (optioal array)\n\nAn exaple:\nwww.saadbenn.com?a=1&b=2"
    )
    var_1 = module_0.strip_url_params3(str_0, var_0)
    assert (
        var_1
        == "Write a functon that does the following:Removes any duplicate query string parameters from the urlRemoves any query string parameters specified within the 2nd argument (optioal array)An exaple:www.saadbenn.com"
    )


def test_case_4():
    none_type_0 = None
    var_0 = module_0.strip_url_params3(none_type_0, none_type_0)


def test_case_5():
    str_0 = "\nWrite a functon that does the following:\nRemoves any duplicate query string parameters from the url\nRemoves any query string parameters specified within the 2nd argument (optioal array)\n\nAn exaple:\nwww.saadbenn.com?a=1&b=2&a=2') // returns 'www.sadbenn.com?a=1&b=2'\n"
    var_0 = module_0.strip_url_params1(str_0)
    assert (
        var_0
        == "\nWrite a functon that does the following:\nRemoves any duplicate query string parameters from the url\nRemoves any query string parameters specified within the 2nd argument (optioal array)\n\nAn exaple:\nwww.saadbenn.com?a=1&b=2"
    )


def test_case_6():
    str_0 = "F"
    var_0 = module_0.strip_url_params1(str_0)
    assert var_0 == "F"


@pytest.mark.xfail(strict=True)
def test_case_7():
    str_0 = "4"
    module_0.strip_url_params1(str_0)


@pytest.mark.xfail(strict=True)
def test_case_8():
    str_0 = "\nWrite a functon that does the following:Removes any duplicate query string parameters from the url\nRemoves any query string parameters specified within th_ 2nd argument (oxtioal array)\n\nAn exaple:\nwww.saadbenn.com?a=1&b=2&a=2') // returns 'www.sadbenn.com?a=1&=2'\n"
    var_0 = module_0.strip_url_params3(str_0)
    assert (
        var_0
        == "Write a functon that does the following:Removes any duplicate query string parameters from the urlRemoves any query string parameters specified within th_ 2nd argument (oxtioal array)An exaple:www.saadbenn.com?a=1&b=2&=2%27"
    )
    var_1 = module_0.strip_url_params2(str_0, str_0)
    assert (
        var_1
        == "\nWrite a functon that does the following:Removes any duplicate query string parameters from the url\nRemoves any query string parameters specified within th_ 2nd argument (oxtioal array)\n\nAn exaple:\nwww.saadbenn.com?a=1"
    )
    module_0.strip_url_params1(var_0)


@pytest.mark.xfail(strict=True)
def test_case_9():
    str_0 = '-rFC"p]F`\x0b89KbV9ZR'
    module_0.strip_url_params1(str_0)


@pytest.mark.xfail(strict=True)
def test_case_10():
    str_0 = "41.e\rY5)O0\\*z\x0cL\r"
    module_0.strip_url_params1(str_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_11():
    str_0 = "w+ti%$;FO!S4w>F5pO"
    module_0.strip_url_params1(str_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_12():
    str_0 = "\nWrite a functon that does the following:Removes any duplicate query string parameters from the url\nRemoves any query string parameters specified within th_ 2nd argument (oxtioal array)\n\nAn exaple:\nwww.saadbenn.com?a=1&b=2&a=2') // returns 'www.sadbenn.com?a=1&=2'\n"
    var_0 = module_0.strip_url_params2(str_0)
    assert (
        var_0
        == "\nWrite a functon that does the following:Removes any duplicate query string parameters from the url\nRemoves any query string parameters specified within th_ 2nd argument (oxtioal array)\n\nAn exaple:\nwww.saadbenn.com?a=1&b=2"
    )
    var_1 = module_0.strip_url_params3(str_0)
    assert (
        var_1
        == "Write a functon that does the following:Removes any duplicate query string parameters from the urlRemoves any query string parameters specified within th_ 2nd argument (oxtioal array)An exaple:www.saadbenn.com?a=1&b=2&=2%27"
    )
    module_0.strip_url_params1(var_1)


@pytest.mark.xfail(strict=True)
def test_case_13():
    str_0 = "\nWrite a functon that does the following:Removes any duplicate query string parameters from the url\nRemoves any query string parameters specified within th_ 2nd argument (oxtioal array)\n\nAn exaple\nwww.saadbenn.com?a=1&b=2&a=2') // returns 'www.sadbenn.comFa=1&=2'\n"
    var_0 = str_0.__repr__()
    var_1 = module_0.strip_url_params1(str_0)
    assert (
        var_1
        == "\nWrite a functon that does the following:Removes any duplicate query string parameters from the url\nRemoves any query string parameters specified within th_ 2nd argument (oxtioal array)\n\nAn exaple\nwww.saadbenn.com?a=1&b=2') // returns 'www.sadbenn.comFa=1&=2"
    )
    var_2 = module_0.strip_url_params3(str_0)
    assert (
        var_2
        == "Write a functon that does the following:Removes any duplicate query string parameters from the urlRemoves any query string parameters specified within th_ 2nd argument (oxtioal array)An exaplewww.saadbenn.com?a=1&b=2&=2%27"
    )
    var_3 = str_0.__iter__()
    module_0.strip_url_params1(var_2)


def test_case_14():
    str_0 = "{FF=;KB*6:"
    var_0 = module_0.strip_url_params1(str_0, str_0)
    assert var_0 == "{FF=;KB*6:{FF=;KB*6"
    var_1 = module_0.strip_url_params1(str_0, str_0)
    assert var_1 == "{FF=;KB*6:{FF=;KB*6"
    var_2 = module_0.strip_url_params1(var_0, str_0)
    assert var_2 == "{FF=;KB*6:{FF=;KB*6{FF=;KB*6"
    var_3 = module_0.strip_url_params2(var_2)
    assert var_3 == "{FF=;KB*6:{FF=;KB*6{FF=;KB*6"
    var_4 = module_1.to_bytes(var_1)
    assert var_4 == "{FF=;KB*6:{FF=;KB*6"
    var_5 = module_0.strip_url_params3(var_3)
    assert var_5 == "{FF=;KB*6:{FF=;KB*6{FF=;KB*6"
    var_6 = module_0.strip_url_params3(var_2)
    assert var_6 == "{FF=;KB*6:{FF=;KB*6{FF=;KB*6"
    var_7 = var_0.__repr__()
    assert var_7 == "'{FF=;KB*6:{FF=;KB*6'"
    var_8 = module_0.strip_url_params3(var_1)
    assert var_8 == "{FF=;KB*6:{FF=;KB*6"
    var_9 = module_0.strip_url_params1(var_0)
    assert var_9 == "{FF=;KB*6:{FF=;KB*6{FF=;KB*6:{FF=;KB*6"


@pytest.mark.xfail(strict=True)
def test_case_15():
    str_0 = "\nWrite a functon that does the following:Removes any duplicate query string parameters from the url\nRemoves any query string parameters specified within th_ 2nd argument (oxtioal array)\n\nAn exaple:\nwww.saadbenn.com?a=1&b=2&a=2') // returns 'www.sadbenn.com?a=1&=2'\n"
    var_0 = module_0.strip_url_params3(str_0)
    assert (
        var_0
        == "Write a functon that does the following:Removes any duplicate query string parameters from the urlRemoves any query string parameters specified within th_ 2nd argument (oxtioal array)An exaple:www.saadbenn.com?a=1&b=2&=2%27"
    )
    module_0.strip_url_params1(var_0)


@pytest.mark.xfail(strict=True)
def test_case_16():
    str_0 = "\nWrite a functon that does the following:Removs any duplicate quer string parameters from the url\nRemoves any query string parameters specified within th_ 2nd argument (oxtioal aPray)\n\nAn exaple:\nwww.saadbenn.com?a=1&b=20a=2') // returns 'www.sadCenn.com?=1&=2'\n"
    var_0 = module_0.strip_url_params2(str_0)
    assert (
        var_0
        == "\nWrite a functon that does the following:Removs any duplicate quer string parameters from the url\nRemoves any query string parameters specified within th_ 2nd argument (oxtioal aPray)\n\nAn exaple:\nwww.saadbenn.com?a=1&b=20a=2') // returns 'www.sadCenn.com"
    )
    var_1 = module_0.strip_url_params2(str_0)
    assert (
        var_1
        == "\nWrite a functon that does the following:Removs any duplicate quer string parameters from the url\nRemoves any query string parameters specified within th_ 2nd argument (oxtioal aPray)\n\nAn exaple:\nwww.saadbenn.com?a=1&b=20a=2') // returns 'www.sadCenn.com"
    )
    var_2 = module_0.strip_url_params1(str_0, var_1)
    assert (
        var_2
        == "\nWrite a functon that does the following:Removs any duplicate quer string parameters from the url\nRemoves any query string parameters specified within th_ 2nd argument (oxtioal aPray)\n\nAn exaple:\nwww.saadbenn.com?&=2"
    )
    var_3 = module_0.strip_url_params3(var_1, var_0)
    assert (
        var_3
        == "Write a functon that does the following:Removs any duplicate quer string parameters from the urlRemoves any query string parameters specified within th_ 2nd argument (oxtioal aPray)An exaple:www.saadbenn.com"
    )
    var_4 = var_2.__iter__()
    module_0.strip_url_params1(var_0)


@pytest.mark.xfail(strict=True)
def test_case_17():
    str_0 = "4"
    str_1 = "4?"
    var_0 = module_0.strip_url_params1(str_1, str_1)
    assert var_0 == "4?"
    var_1 = module_0.strip_url_params2(str_0)
    assert var_1 == "4"
    var_2 = module_0.strip_url_params3(str_0)
    var_3 = var_2.__repr__()
    var_4 = module_0.strip_url_params3(str_0, str_0)
    module_0.strip_url_params1(var_3)


@pytest.mark.xfail(strict=True)
def test_case_18():
    str_0 = "\nWrite a functon that does the following:Removes any duplicate query string parameters from the url\nRemoves any query string parameters specified within th_ 2nd argument (oxtioal array)\n\nAn exaple:\nwww.saadbenn.com?a=1&b=2a=2') // returns 'www.sadbenn.com?a=1&=2'\n"
    var_0 = module_0.strip_url_params2(str_0)
    assert (
        var_0
        == "\nWrite a functon that does the following:Removes any duplicate query string parameters from the url\nRemoves any query string parameters specified within th_ 2nd argument (oxtioal array)\n\nAn exaple:\nwww.saadbenn.com?a=1&b=2a=2') // returns 'www.sadbenn.com"
    )
    var_1 = module_0.strip_url_params2(var_0)
    assert (
        var_1
        == "\nWrite a functon that does the following:Removes any duplicate query string parameters from the url\nRemoves any query string parameters specified within th_ 2nd argument (oxtioal array)\n\nAn exaple:\nwww.saadbenn.com?a=1&b=2a=2') // returns 'www.sadbenn.com"
    )
    var_2 = module_0.strip_url_params1(var_1)
    assert (
        var_2
        == "\nWrite a functon that does the following:Removes any duplicate query string parameters from the url\nRemoves any query string parameters specified within th_ 2nd argument (oxtioal array)\n\nAn exaple:\nwww.saadbenn.com?a=1&b=2"
    )
    var_3 = var_2.__repr__()
    assert (
        var_3
        == "'\\nWrite a functon that does the following:Removes any duplicate query string parameters from the url\\nRemoves any query string parameters specified within th_ 2nd argument (oxtioal array)\\n\\nAn exaple:\\nwww.saadbenn.com?a=1&b=2'"
    )
    var_3.__reversed__()
