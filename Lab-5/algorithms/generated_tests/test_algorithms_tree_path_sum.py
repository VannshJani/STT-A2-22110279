# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import algorithms.tree.path_sum as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    none_type_0 = None
    var_0 = module_0.has_path_sum(none_type_0, none_type_0)
    assert var_0 is False
    module_0.has_path_sum(var_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    int_0 = 676
    none_type_0 = None
    module_0.has_path_sum(int_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    var_0 = module_0.has_path_sum2(none_type_0, none_type_0)
    assert var_0 is False
    module_0.has_path_sum2(var_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = False
    module_0.has_path_sum2(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    none_type_0 = None
    var_0 = module_0.has_path_sum3(none_type_0, none_type_0)
    assert var_0 is False
    module_0.has_path_sum3(var_0, var_0)
