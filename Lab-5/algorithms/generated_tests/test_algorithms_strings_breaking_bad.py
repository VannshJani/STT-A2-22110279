# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import algorithms.strings.breaking_bad as module_0


def test_case_0():
    str_0 = "9u4^D@&5%\tN"
    set_0 = module_0.match_symbol(str_0, str_0)
    var_0 = module_0.bracket(set_0, str_0)


def test_case_1():
    str_0 = "[[[K]]]"
    set_0 = module_0.match_symbol_1(str_0, str_0)
    var_0 = module_0.bracket(set_0, str_0)


def test_case_2():
    str_0 = "(S6zf6?d.DA<"
    var_0 = module_0.bracket(str_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"\xdb\xbe\x90\x1f\xe8"
    module_0.match_symbol_1(bytes_0, bytes_0)


def test_case_4():
    str_0 = "Whk6}2niq]]!"
    str_1 = "[\r]"
    var_0 = module_0.match_symbol_1(str_1, str_0)
    var_1 = module_0.bracket(var_0, var_0)


def test_case_5():
    str_0 = '"u_\nHf\n 1%AL/%f'
    tree_node_0 = module_0.bracket(str_0, str_0)
    set_0 = {str_0, str_0}
    var_0 = module_0.bracket(set_0, tree_node_0)
    var_1 = module_0.bracket(set_0, str_0)


def test_case_6():
    str_0 = "\"u'_2Hf\n 1%AL/%f"
    set_0 = {str_0, str_0}
    var_0 = module_0.bracket(set_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_7():
    dict_0 = {}
    list_0 = [dict_0, dict_0]
    module_0.bracket(list_0, dict_0)
