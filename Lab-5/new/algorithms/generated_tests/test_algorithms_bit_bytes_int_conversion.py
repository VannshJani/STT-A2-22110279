# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import algorithms.bit.bytes_int_conversion as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    int_0 = 1704
    var_0 = module_0.int_to_bytes_little_endian(int_0)
    assert var_0 == b"\xa8\x06"
    var_1 = module_0.int_to_bytes_big_endian(int_0)
    assert var_1 == b"\x06\xa8"
    var_2 = module_0.int_to_bytes_big_endian(int_0)
    assert var_2 == b"\x06\xa8"
    var_3 = module_0.bytes_big_endian_to_int(var_1)
    assert var_3 == 1704
    module_0.int_to_bytes_big_endian(var_2)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = False
    var_0 = module_0.int_to_bytes_big_endian(bool_0)
    float_0 = 1126.0
    module_0.bytes_little_endian_to_int(float_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = -3166
    var_0 = module_0.int_to_bytes_little_endian(int_0)
    bool_0 = True
    var_1 = module_0.int_to_bytes_big_endian(bool_0)
    assert var_1 == b"\x01"
    var_2 = module_0.int_to_bytes_big_endian(int_0)
    module_0.int_to_bytes_little_endian(var_1)


def test_case_3():
    bytes_0 = b"\xdc\x99\xdd\xe4\x00\xaa\x03}"
    var_0 = module_0.bytes_big_endian_to_int(bytes_0)
    assert var_0 == 15895980331114300285


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "_YRknbh 6Yfmhry.(\x0b>"
    module_0.bytes_little_endian_to_int(str_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    set_0 = set()
    var_0 = module_0.bytes_little_endian_to_int(set_0)
    assert var_0 == 0
    var_1 = module_0.bytes_little_endian_to_int(set_0)
    assert var_1 == 0
    module_0.int_to_bytes_little_endian(set_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    none_type_0 = None
    module_0.int_to_bytes_big_endian(none_type_0)
