# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import algorithms.strings.reverse_string as module_0


def test_case_0():
    float_0 = -4000.1
    list_0 = []
    list_1 = [float_0, float_0, list_0, list_0]
    var_0 = module_0.recursive(list_1)


def test_case_1():
    str_0 = "494C\r0X2_%2W$"
    var_0 = module_0.ultra_pythonic(str_0)
    assert var_0 == "$W2%_2X0\rC494"
    var_1 = module_0.iterative(var_0)
    assert var_1 == "494C\r0X2_%2W$"


@pytest.mark.xfail(strict=True)
def test_case_2():
    list_0 = []
    var_0 = module_0.recursive(list_0)
    var_1 = module_0.recursive(var_0)
    var_2 = module_0.recursive(list_0)
    var_3 = module_0.recursive(var_0)
    var_4 = module_0.recursive(var_3)
    var_5 = module_0.iterative(var_1)
    assert var_5 == ""
    var_6 = module_0.ultra_pythonic(var_0)
    var_7 = module_0.iterative(var_6)
    var_8 = module_0.pythonic(var_4)
    var_9 = module_0.pythonic(var_0)
    bool_0 = False
    module_0.pythonic(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    set_0 = set()
    module_0.ultra_pythonic(set_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    complex_0 = 487.219967 - 2183j
    set_0 = {complex_0, complex_0, complex_0, complex_0}
    module_0.pythonic(set_0)
