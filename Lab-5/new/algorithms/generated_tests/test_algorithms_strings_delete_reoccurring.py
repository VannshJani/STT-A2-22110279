# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import algorithms.strings.delete_reoccurring as module_0


def test_case_0():
    str_0 = "U4j?zS {vFnxcY"
    var_0 = module_0.delete_reoccurring_characters(str_0)
    assert var_0 == "U4j?zS {vFnxcY"
    var_1 = module_0.delete_reoccurring_characters(var_0)
    assert var_1 == "U4j?zS {vFnxcY"


@pytest.mark.xfail(strict=True)
def test_case_1():
    none_type_0 = None
    module_0.delete_reoccurring_characters(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = '\nInitially, there is a Robot at position (0, 0). Given a sequence of its moves,\njudge if this robot makes a circle, which means it moves back to the original place.\n\nThe move sequence is represented by a string. And each move is represent by a\ncharacter. The valid robot moves are R (Right), L (Left), U (Up) and D (down).\nThe output should be true or false representing whether the robot makes a circle.\n\nExample 1:\nInput: "UD"\nOutput: true\nExample 2:\nInput: "LL"\nOutput: false\n'
    var_0 = module_0.delete_reoccurring_characters(str_0)
    assert var_0 == '\nInitaly, hersRobp(0).GvqucfmjdgkwTALUDEx1:"O2'
    var_1 = module_0.delete_reoccurring_characters(str_0)
    assert var_1 == '\nInitaly, hersRobp(0).GvqucfmjdgkwTALUDEx1:"O2'
    var_2 = module_0.delete_reoccurring_characters(str_0)
    assert var_2 == '\nInitaly, hersRobp(0).GvqucfmjdgkwTALUDEx1:"O2'
    var_3 = module_0.delete_reoccurring_characters(str_0)
    assert var_3 == '\nInitaly, hersRobp(0).GvqucfmjdgkwTALUDEx1:"O2'
    bool_0 = True
    module_0.delete_reoccurring_characters(bool_0)
