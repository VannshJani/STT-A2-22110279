# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import algorithms.tree.bst.BSTIterator as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"\x96\x9fNx\xc2\x89N\xfe\x1bC"
    module_0.BSTIterator(bytes_0)


def test_case_1():
    dict_0 = {}
    b_s_t_iterator_0 = module_0.BSTIterator(dict_0)
    assert (
        f"{type(b_s_t_iterator_0).__module__}.{type(b_s_t_iterator_0).__qualname__}"
        == "algorithms.tree.bst.BSTIterator.BSTIterator"
    )
    assert b_s_t_iterator_0.stack == []


def test_case_2():
    dict_0 = {}
    b_s_t_iterator_0 = module_0.BSTIterator(dict_0)
    assert (
        f"{type(b_s_t_iterator_0).__module__}.{type(b_s_t_iterator_0).__qualname__}"
        == "algorithms.tree.bst.BSTIterator.BSTIterator"
    )
    assert b_s_t_iterator_0.stack == []
    var_0 = b_s_t_iterator_0.has_next()
    b_s_t_iterator_1 = module_0.BSTIterator(var_0)
