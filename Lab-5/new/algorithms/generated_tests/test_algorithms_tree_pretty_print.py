# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import algorithms.tree.pretty_print as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"V{o\xa7\x05"
    module_0.tree_print(bytes_0)


def test_case_1():
    dict_0 = {}
    var_0 = module_0.tree_print(dict_0)
    var_1 = module_0.tree_print(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b"\x85\xd9\r]\x1c\xa4\xb3\xb1\xec\xfao\xfd\xa6\x02S\xcf\x9a\x97\x13"
    str_0 = "\nIn a directed graph, a strongly connected component is a set of vertices such\nthat for any pairs of vertices u and v there exists a path (u-...-v) that\nconnects them. A graph is strongly connected if it is a single strongly\nconnected component.\n"
    bool_0 = False
    dict_0 = {bytes_0: bytes_0, str_0: bool_0}
    module_0.tree_print(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = "{*QJhu6bQK6+wL#aL"
    dict_0 = {str_0: str_0, str_0: str_0, str_0: str_0, str_0: str_0}
    var_0 = module_0.tree_print(dict_0)
    var_1 = module_0.tree_print(dict_0)
    module_0.tree_print(var_0)
