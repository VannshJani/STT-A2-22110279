# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import algorithms.strings.count_binary_substring as module_0


def test_case_0():
    int_0 = -452
    str_0 = "\n    Find the length of the longest substring\n    without repeating characters.\n    Uses alternative algorithm.\n    Return max_len and the substring as a tuple\n    "
    tuple_0 = (int_0, str_0)
    var_0 = module_0.count_binary_substring(tuple_0)
    assert var_0 == 1


@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    var_0 = module_0.count_binary_substring(list_0)
    assert var_0 == 0
    var_1 = module_0.count_binary_substring(list_0)
    assert var_1 == 0
    var_2 = module_0.count_binary_substring(list_0)
    assert var_2 == 0
    none_type_0 = None
    var_3 = module_0.count_binary_substring(list_0)
    assert var_3 == 0
    module_0.count_binary_substring(none_type_0)
