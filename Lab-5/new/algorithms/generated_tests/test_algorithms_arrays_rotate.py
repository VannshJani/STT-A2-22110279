# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import algorithms.arrays.rotate as module_0


def test_case_0():
    none_type_0 = None
    var_0 = module_0.rotate_v3(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    set_0 = set()
    module_0.rotate_v3(set_0, set_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b"\xce\xda;\x85\x8f\xa7\xc1=\xf1\x1fs\x0f\x92\xd2cl\xab"
    module_0.rotate_v2(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = True
    bytes_0 = b"6\x81\xc1Fr\xee\x1dg\x13\xdf\xfc"
    module_0.rotate_v2(bytes_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "m\nde\x0b\x0b.}Vaq\nL,"
    bool_0 = True
    module_0.rotate_v1(str_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "m\nde\x0b\x0b.}taq\nL,"
    bool_0 = False
    var_0 = module_0.rotate_v1(str_0, bool_0)
    module_0.rotate_v3(bool_0, str_0)


def test_case_6():
    bool_0 = False
    tuple_0 = (bool_0,)
    var_0 = module_0.rotate_v2(tuple_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_7():
    int_0 = 2
    tuple_0 = (int_0,)
    var_0 = module_0.rotate_v2(tuple_0, int_0)
    none_type_0 = None
    var_1 = module_0.rotate_v3(none_type_0, var_0)
    bool_0 = True
    module_0.rotate_v1(var_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_8():
    int_0 = 3
    list_0 = [int_0, int_0, int_0, int_0]
    var_0 = module_0.rotate_v2(list_0, int_0)
    int_1 = 13
    module_0.rotate_v2(int_1, int_1)
