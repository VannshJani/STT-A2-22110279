# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import algorithms.strings.decode_string as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    list_1 = [list_0, list_0]
    list_2 = [list_1]
    module_0.decode_string(list_2)


@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = "6:Gs S'G6l4"
    object_0 = module_1.object()
    var_0 = module_0.decode_string(str_0)
    assert var_0 == ":Gs S'Gl"
    var_1 = module_0.decode_string(var_0)
    assert var_1 == ":Gs S'Gl"
    var_2 = module_0.decode_string(str_0)
    assert var_2 == ":Gs S'Gl"
    var_3 = module_0.decode_string(var_1)
    assert var_3 == ":Gs S'Gl"
    var_4 = module_0.decode_string(var_1)
    assert var_4 == ":Gs S'Gl"
    module_0.decode_string(object_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.decode_string(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"\xb5X\x81T"
    dict_0 = {bytes_0: bytes_0}
    module_0.decode_string(dict_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "[$E$Q"
    var_0 = module_0.decode_string(str_0)
    assert var_0 == "$E$Q"
    none_type_0 = None
    module_0.decode_string(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "\t?]D/5V][83K1>8Y"
    module_0.decode_string(str_0)
