# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import algorithms.bit.count_flips_to_convert as module_0


def test_case_0():
    bool_0 = True
    var_0 = module_0.count_flips_to_convert(bool_0, bool_0)
    assert var_0 == 0
    var_1 = module_0.count_flips_to_convert(bool_0, bool_0)
    assert var_1 == 0
    var_2 = module_0.count_flips_to_convert(var_1, bool_0)
    assert var_2 == 1


@pytest.mark.xfail(strict=True)
def test_case_1():
    none_type_0 = None
    module_0.count_flips_to_convert(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = 1040
    var_0 = module_0.count_flips_to_convert(int_0, int_0)
    assert var_0 == 0
    var_1 = module_0.count_flips_to_convert(var_0, var_0)
    assert var_1 == 0
    var_2 = module_0.count_flips_to_convert(int_0, var_0)
    assert var_2 == 2
    var_3 = module_0.count_flips_to_convert(var_2, var_0)
    assert var_3 == 1
    var_4 = module_0.count_flips_to_convert(var_1, var_1)
    assert var_4 == 0
    var_5 = module_0.count_flips_to_convert(var_4, var_1)
    assert var_5 == 0
    bytes_0 = b""
    module_0.count_flips_to_convert(var_5, bytes_0)
